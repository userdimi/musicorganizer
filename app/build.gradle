plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id "org.jlleitschuh.gradle.ktlint" version "10.2.0"
    id 'dagger.hilt.android.plugin'
    id 'de.mannodermaus.android-junit5'
}

String getApiKey() {
    def propFile = rootProject.file("./apikey.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['API_KEY']
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "de.colognecode.musicorganizer"
        minSdk 21
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "API_KEY", getApiKey())
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.0.1'
    }


    testOptions {
        unitTests.all {
            useJUnitPlatform()
        }
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    // Android Core
    def android_core_version = '1.6.0'
    implementation "androidx.core:core-ktx:$android_core_version"
    def android_appcompat_version = '1.3.1'
    implementation "androidx.appcompat:appcompat:$android_appcompat_version"
    def legacy_support_version = '1.0.0'
    implementation "androidx.legacy:legacy-support-v4:$legacy_support_version"
    def live_data_version = '2.3.1'
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$live_data_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$live_data_version"
    def lifecycle_extensions_version = '2.2.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$lifecycle_extensions_version"

    // Layout
    def compose_version = '1.0.2'
    implementation 'androidx.activity:activity-compose:1.3.1'
    implementation "androidx.compose.material:material:$compose_version"
    implementation "androidx.compose.animation:animation:$compose_version"
    implementation "androidx.compose.ui:ui-tooling:$compose_version"
    def compose_viewmodel_version = '2.4.0-beta01'
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$compose_viewmodel_version"

    def material_version = '1.4.0'
    implementation "com.google.android.material:material:$material_version"
    def compose_constraint_layout_version = '1.0.0-beta02'
    implementation "androidx.constraintlayout:constraintlayout-compose:$compose_constraint_layout_version"

    // Dependency Injection
    def hilt_version = '2.38.1'
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Network
    def retrofit_version = '2.9.0'
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"
    def ok_http_version = "4.7.2"
    implementation "com.squareup.okhttp3:logging-interceptor:$ok_http_version"

    // Concurrency
    def coroutines_version = '1.5.2'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutines_version"

    // Unit Testing
    def junit4_version = '4.13.2'
    testImplementation "junit:junit:$junit4_version"
    def junit5_version = '5.7.1'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit5_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit5_version"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:$junit5_version"
    def mockk_version = '1.12.0'
    testImplementation "io.mockk:mockk:$mockk_version"
    def kotest_version = '4.6.2'
    testImplementation "io.kotest:kotest-runner-junit5:$kotest_version"
    testImplementation "io.kotest:kotest-assertions-core:$kotest_version"
    def arch_core_version = '2.1.0'
    testImplementation "androidx.arch.core:core-testing:$arch_core_version"

    // UI Testing
    def ext_version = '1.1.3'
    androidTestImplementation "androidx.test.ext:junit:$ext_version"
    def espresso_version = '3.4.0'
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

}

ktlint {
    verbose = true
    android = true
    outputToConsole = true
    outputColorName = "RED"
    disabledRules.addAll("no-wildcard-imports", "import-ordering")
}